<?php
class Foobar { use BazTrait { oldfunction as protected Baz } }
class Foobar { use BazTrait { oldfunction as protected abstract } }
class Foobar { use BazTrait { oldfunction as protected and } }
class Foobar { use BazTrait { oldfunction as protected array } }
class Foobar { use BazTrait { oldfunction as protected as } }
class Foobar { use BazTrait { oldfunction as protected break } }
class Foobar { use BazTrait { oldfunction as protected callable } }
class Foobar { use BazTrait { oldfunction as protected case } }
class Foobar { use BazTrait { oldfunction as protected catch } }
class Foobar { use BazTrait { oldfunction as protected class } }
class Foobar { use BazTrait { oldfunction as protected clone } }
class Foobar { use BazTrait { oldfunction as protected const } }
class Foobar { use BazTrait { oldfunction as protected continue } }
class Foobar { use BazTrait { oldfunction as protected declare } }
class Foobar { use BazTrait { oldfunction as protected default } }
class Foobar { use BazTrait { oldfunction as protected do } }
class Foobar { use BazTrait { oldfunction as protected else } }
class Foobar { use BazTrait { oldfunction as protected elseif } }
class Foobar { use BazTrait { oldfunction as protected enddeclare } }
class Foobar { use BazTrait { oldfunction as protected endfor } }
class Foobar { use BazTrait { oldfunction as protected endforeach } }
class Foobar { use BazTrait { oldfunction as protected endif } }
class Foobar { use BazTrait { oldfunction as protected endswitch } }
class Foobar { use BazTrait { oldfunction as protected endwhile } }
class Foobar { use BazTrait { oldfunction as protected extends } }
class Foobar { use BazTrait { oldfunction as protected final } }
class Foobar { use BazTrait { oldfunction as protected finally } }
class Foobar { use BazTrait { oldfunction as protected for } }
class Foobar { use BazTrait { oldfunction as protected foreach } }
class Foobar { use BazTrait { oldfunction as protected function } }
class Foobar { use BazTrait { oldfunction as protected global } }
class Foobar { use BazTrait { oldfunction as protected goto } }
class Foobar { use BazTrait { oldfunction as protected if } }
class Foobar { use BazTrait { oldfunction as protected implements } }
class Foobar { use BazTrait { oldfunction as protected interface } }
class Foobar { use BazTrait { oldfunction as protected instanceof } }
class Foobar { use BazTrait { oldfunction as protected insteadof } }
class Foobar { use BazTrait { oldfunction as protected namespace } }
class Foobar { use BazTrait { oldfunction as protected new } }
class Foobar { use BazTrait { oldfunction as protected or } }
class Foobar { use BazTrait { oldfunction as protected private } }
class Foobar { use BazTrait { oldfunction as protected protected } }
class Foobar { use BazTrait { oldfunction as protected public } }
class Foobar { use BazTrait { oldfunction as protected static } }
class Foobar { use BazTrait { oldfunction as protected switch } }
class Foobar { use BazTrait { oldfunction as protected throw } }
class Foobar { use BazTrait { oldfunction as protected trait } }
class Foobar { use BazTrait { oldfunction as protected try } }
class Foobar { use BazTrait { oldfunction as protected use } }
class Foobar { use BazTrait { oldfunction as protected var } }
class Foobar { use BazTrait { oldfunction as protected while } }
class Foobar { use BazTrait { oldfunction as protected xor } }
class Foobar { use BazTrait { oldfunction as protected __CLASS__ } }
class Foobar { use BazTrait { oldfunction as protected __DIR__ } }
class Foobar { use BazTrait { oldfunction as protected __FILE__ } }
class Foobar { use BazTrait { oldfunction as protected __FUNCTION__ } }
class Foobar { use BazTrait { oldfunction as protected __METHOD__ } }
class Foobar { use BazTrait { oldfunction as protected __NAMESPACE__ } }
class Foobar { use BazTrait { oldfunction as protected bool } }
class Foobar { use BazTrait { oldfunction as protected int } }
class Foobar { use BazTrait { oldfunction as protected float } }
class Foobar { use BazTrait { oldfunction as protected string } }
class Foobar { use BazTrait { oldfunction as protected null } }
class Foobar { use BazTrait { oldfunction as protected true } }
class Foobar { use BazTrait { oldfunction as protected false } }
class Foobar { use BazTrait { oldfunction as protected resource } }
class Foobar { use BazTrait { oldfunction as protected object } }
class Foobar { use BazTrait { oldfunction as protected mixed } }
class Foobar { use BazTrait { oldfunction as protected numeric } }
