<?php

call_user_method();
call_user_method_array();
define_syslog_variables();
dl();
ereg();
ereg_replace();
eregi();
eregi_replace();
import_request_variables();
mcrypt_generic_end();
mysql_db_query();
mysql_escape_string();
mysql_list_dbs();
mysqli_bind_param();
mysqli_bind_result();
mysqli_client_encoding();
mysqli_fetch();
mysqli_param_count();
mysqli_get_metadata();
mysqli_send_long_data();
magic_quotes_runtime();
session_register();
session_unregister();
session_is_registered();
set_magic_quotes_runtime();
set_socket_blocking();
split();
spliti();
sql_regcase();
php_logo_guid();
php_egg_logo_guid();
php_real_logo_guid();
zend_logo_guid();
datefmt_set_timezone_id();
mcrypt_ecb();
mcrypt_cbc();
mcrypt_cfb();
mcrypt_ofb();
ocibindbyname();
ocicancel();
ocicloselob();
ocicollappend();
ocicollassign();
ocicollassignelem();
ocicollgetelem();
ocicollmax();
ocicollsize();
ocicolltrim();
ocicolumnisnull();
ocicolumnname();
ocicolumnprecision();
ocicolumnscale();
ocicolumnsize();
ocicolumntype();
ocicolumntyperaw();
ocicommit();
ocidefinebyname();
ocierror();
ociexecute();
ocifetch();
ocifetchinto();
ocifetchstatement();
ocifreecollection();
ocifreecursor();
ocifreedesc();
ocifreestatement();
ociinternaldebug();
ociloadlob();
ocilogoff();
ocilogon();
ocinewcollection();
ocinewcursor();
ocinewdescriptor();
ocinlogon();
ocinumcols();
ociparse();
ociplogon();
ociresult();
ocirollback();
ocirowcount();
ocisavelob();
ocisavelobfile();
ociserverversion();
ocisetprefetch();
ocistatementtype();
ociwritelobtofile();
ociwritetemporarylob();
imagepsbbox();
imagepsencodefont();
imagepsextendfont();
imagepsfreefont();
imagepsloadfont();
imagepsslantfont();
imagepstext();
ldap_sort();
php_check_syntax();
mysqli_get_cache_stats();
mcrypt_create_iv();
mcrypt_decrypt();
mcrypt_enc_get_algorithms_name();
mcrypt_enc_get_block_size();
mcrypt_enc_get_iv_size();
mcrypt_enc_get_key_size();
mcrypt_enc_get_modes_name();
mcrypt_enc_get_supported_key_sizes();
mcrypt_enc_is_block_algorithm_mode();
mcrypt_enc_is_block_algorithm();
mcrypt_enc_is_block_mode();
mcrypt_enc_self_test();
mcrypt_encrypt();
mcrypt_generic_deinit();
mcrypt_generic_init();
mcrypt_generic();
mcrypt_get_block_size();
mcrypt_get_cipher_name();
mcrypt_get_iv_size();
mcrypt_get_key_size();
mcrypt_list_algorithms();
mcrypt_list_modes();
mcrypt_module_close();
mcrypt_module_get_algo_block_size();
mcrypt_module_get_algo_key_size();
mcrypt_module_get_supported_key_sizes();
mcrypt_module_is_block_algorithm_mode();
mcrypt_module_is_block_algorithm();
mcrypt_module_is_block_mode();
mcrypt_module_open();
mcrypt_module_self_test();
mdecrypt_generic();

// Test against false positives.
$class->php_check_syntax();
MyClass::php_check_syntax();
MyNamespace\php_check_syntax();
echo PHP_CHECK_SYNTAX; // Constant.
const php_check_syntax = 'abc';
use php_check_syntax;
function php_check_syntax() {}
abstract class Split {}

// More deprecated functions, PHP 7.2
jpeg2wbmp();
png2wbmp();
create_function();
while (list($key, $val) = each($array)) {}
gmp_random(2);
read_exif_data();

// PHP 7.3.
image2wbmp();
mbregex_encoding();
mbereg();
mberegi();
mbereg_replace();
mberegi_replace();
mbsplit();
mbereg_match();
mbereg_search();
mbereg_search_pos();
mbereg_search_regs();
mbereg_search_init();
mbereg_search_getregs();
mbereg_search_getpos();
mbereg_search_setpos();
fgetss();
gzgetss();

// PHP 7.4.
ibase_add_user();
ibase_affected_rows();
ibase_backup();
ibase_blob_add();
ibase_blob_cancel();
ibase_blob_close();
ibase_blob_create();
ibase_blob_echo();
ibase_blob_get();
ibase_blob_import();
ibase_blob_info();
ibase_blob_open();
ibase_close();
ibase_commit_ret();
ibase_commit();
ibase_connect();
ibase_db_info();
ibase_delete_user();
ibase_drop_db();
ibase_errcode();
ibase_errmsg();
ibase_execute();
ibase_fetch_assoc();
ibase_fetch_object();
ibase_fetch_row();
ibase_field_info();
ibase_free_event_handler();
ibase_free_query();
ibase_free_result();
ibase_gen_id();
ibase_maintain_db();
ibase_modify_user();
ibase_name_result();
ibase_num_fields();
ibase_num_params();
ibase_param_info();
ibase_pconnect();
ibase_prepare();
ibase_query();
ibase_restore();
ibase_rollback_ret();
ibase_rollback();
ibase_server_info();
ibase_service_attach();
ibase_service_detach();
ibase_set_event_handler();
ibase_trans();
ibase_wait_event();

// Pfpro extension - PHP 5.1
pfpro_cleanup();
pfpro_init();
pfpro_process_raw();
pfpro_process();
pfpro_version();

// PHP 7.4.
wddx_add_vars();
wddx_deserialize();
wddx_packet_end();
wddx_packet_start();
wddx_serialize_value();
wddx_serialize_vars();
ldap_control_paged_result_response();
ldap_control_paged_result();
recode_file();
recode_string();
recode();
is_real();
get_magic_quotes_gpc();
get_magic_quotes_runtime();
hebrevc($str));
convert_cyr_string($str, 'k', 'i');
money_format();
ezmlm_hash();
restore_include_path();

// These calls should *not* trigger an error.
$myobject -> php_check_syntax (); // Method, not the native PHP function.
myNamespace \ /*comment*/ php_check_syntax(); // Namespaced function, not the native PHP function.
namespace\php_check_syntax(); // Namespaced function, not the native PHP function.
$obj = new php_check_syntax /*comment*/ (); // Class not method.

// PHP 5.3 Ncurses extension.
ncurses_addch();
ncurses_addchnstr();
ncurses_addchstr();
ncurses_addnstr();
ncurses_addstr();
ncurses_assume_default_colors();
ncurses_attroff();
ncurses_attron();
ncurses_attrset();
ncurses_baudrate();
ncurses_beep();
ncurses_bkgd();
ncurses_bkgdset();
ncurses_border();
ncurses_bottom_panel();
ncurses_can_change_color();
ncurses_cbreak();
ncurses_clear();
ncurses_clrtobot();
ncurses_clrtoeol();
ncurses_color_content();
ncurses_color_set();
ncurses_curs_set();
ncurses_def_prog_mode();
ncurses_def_shell_mode();
ncurses_define_key();
ncurses_del_panel();
ncurses_delay_output();
ncurses_delch();
ncurses_deleteln();
ncurses_delwin();
ncurses_doupdate();
ncurses_echo();
ncurses_echochar();
ncurses_end();
ncurses_erase();
ncurses_erasechar();
ncurses_filter();
ncurses_flash();
ncurses_flushinp();
ncurses_getch();
ncurses_getmaxyx();
ncurses_getmouse();
ncurses_getyx();
ncurses_halfdelay();
ncurses_has_colors();
ncurses_has_ic();
ncurses_has_il();
ncurses_has_key();
ncurses_hide_panel();
ncurses_hline();
ncurses_inch();
ncurses_init_color();
ncurses_init_pair();
ncurses_init();
ncurses_insch();
ncurses_insdelln();
ncurses_insertln();
ncurses_insstr();
ncurses_instr();
ncurses_isendwin();
ncurses_keyok();
ncurses_keypad();
ncurses_killchar();
ncurses_longname();
ncurses_meta();
ncurses_mouse_trafo();
ncurses_mouseinterval();
ncurses_mousemask();
ncurses_move_panel();
ncurses_move();
ncurses_mvaddch();
ncurses_mvaddchnstr();
ncurses_mvaddchstr();
ncurses_mvaddnstr();
ncurses_mvaddstr();
ncurses_mvcur();
ncurses_mvdelch();
ncurses_mvgetch();
ncurses_mvhline();
ncurses_mvinch();
ncurses_mvvline();
ncurses_mvwaddstr();
ncurses_napms();
ncurses_new_panel();
ncurses_newpad();
ncurses_newwin();
ncurses_nl();
ncurses_nocbreak();
ncurses_noecho();
ncurses_nonl();
ncurses_noqiflush();
ncurses_noraw();
ncurses_pair_content();
ncurses_panel_above();
ncurses_panel_below();
ncurses_panel_window();
ncurses_pnoutrefresh();
ncurses_prefresh();
ncurses_putp();
ncurses_qiflush();
ncurses_raw();
ncurses_refresh();
ncurses_replace_panel();
ncurses_reset_prog_mode();
ncurses_reset_shell_mode();
ncurses_resetty();
ncurses_savetty();
ncurses_scr_dump();
ncurses_scr_init();
ncurses_scr_restore();
ncurses_scr_set();
ncurses_scrl();
ncurses_show_panel();
ncurses_slk_attr();
ncurses_slk_attroff();
ncurses_slk_attron();
ncurses_slk_attrset();
ncurses_slk_clear();
ncurses_slk_color();
ncurses_slk_init();
ncurses_slk_noutrefresh();
ncurses_slk_refresh();
ncurses_slk_restore();
ncurses_slk_set();
ncurses_slk_touch();
ncurses_standend();
ncurses_standout();
ncurses_start_color();
ncurses_termattrs();
ncurses_termname();
ncurses_timeout();
ncurses_top_panel();
ncurses_typeahead();
ncurses_ungetch();
ncurses_ungetmouse();
ncurses_update_panels();
ncurses_use_default_colors();
ncurses_use_env();
ncurses_use_extended_names();
ncurses_vidattr();
ncurses_vline();
ncurses_waddch();
ncurses_waddstr();
ncurses_wattroff();
ncurses_wattron();
ncurses_wattrset();
ncurses_wborder();
ncurses_wclear();
ncurses_wcolor_set();
ncurses_werase();
ncurses_wgetch();
ncurses_whline();
ncurses_wmouse_trafo();
ncurses_wmove();
ncurses_wnoutrefresh();
ncurses_wrefresh();
ncurses_wstandend();
ncurses_wstandout();
ncurses_wvline();

// PHP 5.1 MCVE extension.
m_checkstatus();
m_completeauthorizations();
m_connect();
m_connectionerror();
m_deletetrans();
m_destroyconn();
m_destroyengine();
m_getcell();
m_getcellbynum();
m_getcommadelimited();
m_getheader();
m_initconn();
m_initengine();
m_iscommadelimited();
m_maxconntimeout();
m_monitor();
m_numcolumns();
m_numrows();
m_parsecommadelimited();
m_responsekeys();
m_responseparam();
m_returnstatus();
m_setblocking();
m_setdropfile();
m_setip();
m_setssl_cafile();
m_setssl_files();
m_setssl();
m_settimeout();
m_sslcert_gen_hash();
m_transactionssent();
m_transinqueue();
m_transkeyval();
m_transnew();
m_transsend();
m_uwait();
m_validateidentifier();
m_verifyconnection();
m_verifysslcert();

// PHP 5.1 DIO extension.
dio_close();
dio_fcntl();
dio_open();
dio_read();
dio_seek();
dio_stat();
dio_tcsetattr();
dio_truncate();
dio_write();

// PHP 5.3 FDF extension.
fdf_add_doc_javascript();
fdf_add_template();
fdf_close();
fdf_create();
fdf_enum_values();
fdf_errno();
fdf_error();
fdf_get_ap();
fdf_get_attachment();
fdf_get_encoding();
fdf_get_file();
fdf_get_flags();
fdf_get_opt();
fdf_get_status();
fdf_get_value();
fdf_get_version();
fdf_header();
fdf_next_field_name();
fdf_open_string();
fdf_open();
fdf_remove_item();
fdf_save_string();
fdf_save();
fdf_set_ap();
fdf_set_encoding();
fdf_set_file();
fdf_set_flags();
fdf_set_javascript_action();
fdf_set_on_import_javascript();
fdf_set_opt();
fdf_set_status();
fdf_set_submit_form_action();
fdf_set_target_frame();
fdf_set_value();
fdf_set_version();

// PHP 5.3 Ming extension.
ming_keypress();
ming_setcubicthreshold();
ming_setscale();
ming_setswfcompression();
ming_useconstants();
ming_useswfversion();

// PHP 5.1 Fam extension.
fam_cancel_monitor();
fam_close();
fam_monitor_collection();
fam_monitor_directory();
fam_monitor_file();
fam_next_event();
fam_open();
fam_pending();
fam_resume_monitor();
fam_suspend_monitor();

// PHP 5.2 HWAPI extension.
hwapi_attribute_new();
hwapi_content_new();
hwapi_hgcsp();
hwapi_object_new();

// PHP 5.1 YP/NIS extension.
yp_all();
yp_cat();
yp_err_string();
yp_errno();
yp_first();
yp_get_default_domain();
yp_master();
yp_match();
yp_next();
yp_order();

// PHP 5.1 Mnogosearch extension.
udm_add_search_limit();
udm_alloc_agent_array();
udm_alloc_agent();
udm_api_version();
udm_cat_list();
udm_cat_path();
udm_check_charset();
udm_clear_search_limits();
udm_crc32();
udm_errno();
udm_error();
udm_find();
udm_free_agent();
udm_free_ispell_data();
udm_free_res();
udm_get_doc_count();
udm_get_res_field();
udm_get_res_param();
udm_hash32();
udm_load_ispell_data();
udm_set_agent_param();

// PHP 5.1.3 Msession extension.
msession_connect();
msession_count();
msession_create();
msession_destroy();
msession_disconnect();
msession_find();
msession_get_array();
msession_get_data();
msession_get();
msession_inc();
msession_list();
msession_listvar();
msession_lock();
msession_plugin();
msession_randstr();
msession_set_array();
msession_set_data();
msession_set();
msession_timeout();
msession_uniq();
msession_unlock();

__autoload($class);

// PHP 5.0 Crack extension.
crack_check();
crack_closedict();
crack_getlastmessage();
crack_opendict();

// PHP 5.1 W32API extension.
w32api_deftype();
w32api_init_dtype();
w32api_invoke_function();
w32api_register_function();
w32api_set_call_method();

// PHP 5.1 CPDF extension.
cpdf_add_annotation();
cpdf_add_outline();
cpdf_arc();
cpdf_begin_text();
cpdf_circle();
cpdf_clip();
cpdf_close();
cpdf_closepath_fill_stroke();
cpdf_closepath_stroke();
cpdf_closepath();
cpdf_continue_text();
cpdf_curveto();
cpdf_end_text();
cpdf_fill_stroke();
cpdf_fill();
cpdf_finalize_page();
cpdf_finalize();
cpdf_global_set_document_limits();
cpdf_import_jpeg();
cpdf_lineto();
cpdf_moveto();
cpdf_newpath();
cpdf_open();
cpdf_output_buffer();
cpdf_page_init();
cpdf_place_inline_image();
cpdf_rect();
cpdf_restore();
cpdf_rlineto();
cpdf_rmoveto();
cpdf_rotate_text();
cpdf_rotate();
cpdf_save_to_file();
cpdf_save();
cpdf_scale();
cpdf_set_action_url();
cpdf_set_char_spacing();
cpdf_set_creator();
cpdf_set_current_page();
cpdf_set_font_directories();
cpdf_set_font_map_file();
cpdf_set_font();
cpdf_set_horiz_scaling();
cpdf_set_keywords();
cpdf_set_leading();
cpdf_set_page_animation();
cpdf_set_subject();
cpdf_set_text_matrix();
cpdf_set_text_pos();
cpdf_set_text_rendering();
cpdf_set_text_rise();
cpdf_set_title();
cpdf_set_viewer_preferences();
cpdf_set_word_spacing();
cpdf_setdash();
cpdf_setflat();
cpdf_setgray_fill();
cpdf_setgray_stroke();
cpdf_setgray();
cpdf_setlinecap();
cpdf_setlinejoin();
cpdf_setlinewidth();
cpdf_setmiterlimit();
cpdf_setrgbcolor_fill();
cpdf_setrgbcolor_stroke();
cpdf_setrgbcolor();
cpdf_show_xy();
cpdf_show();
cpdf_stringwidth();
cpdf_stroke();
cpdf_text();
cpdf_translate();
ircg_channel_mode();
ircg_disconnect();
ircg_eval_ecmascript_params();
ircg_fetch_error_msg();
ircg_get_username();
ircg_html_encode();
ircg_ignore_add();
ircg_ignore_del();
ircg_invite();
ircg_is_conn_alive();
ircg_join();
ircg_kick();
ircg_list();
ircg_lookup_format_messages();
ircg_lusers();
ircg_msg();
ircg_names();
ircg_nick();
ircg_nickname_escape();
ircg_nickname_unescape();
ircg_notice();
ircg_oper();
ircg_part();
ircg_pconnect();
ircg_register_format_messages();
ircg_set_current();
ircg_set_file();
ircg_set_on_die();
ircg_topic();
ircg_who();
ircg_whois();
dbase_add_record();
dbase_close();
dbase_create();
dbase_delete_record();
dbase_get_header_info();
dbase_get_record_with_names();
dbase_get_record();
dbase_numfields();
dbase_numrecords();
dbase_open();
dbase_pack();
dbase_replace_record();
dbx_close();
dbx_compare();
dbx_connect();
dbx_error();
dbx_escape_string();
dbx_fetch_row();
dbx_query();
dbx_sort();
fbsql_affected_rows();
fbsql_autocommit();
fbsql_blob_size();
fbsql_change_user();
fbsql_clob_size();
fbsql_close();
fbsql_commit();
fbsql_connect();
fbsql_create_blob();
fbsql_create_clob();
fbsql_create_db();
fbsql_data_seek();
fbsql_database_password();
fbsql_database();
fbsql_db_query();
fbsql_db_status();
fbsql_drop_db();
fbsql_errno();
fbsql_error();
fbsql_fetch_array();
fbsql_fetch_assoc();
fbsql_fetch_field();
fbsql_fetch_lengths();
fbsql_fetch_object();
fbsql_fetch_row();
fbsql_field_flags();
fbsql_field_len();
fbsql_field_name();
fbsql_field_seek();
fbsql_field_table();
fbsql_field_type();
fbsql_free_result();
fbsql_get_autostart_info();
fbsql_hostname();
fbsql_insert_id();
fbsql_list_dbs();
fbsql_list_fields();
fbsql_list_tables();
fbsql_next_result();
fbsql_num_fields();
fbsql_num_rows();
fbsql_password();
fbsql_pconnect();
fbsql_query();
fbsql_read_blob();
fbsql_read_clob();
fbsql_result();
fbsql_rollback();
fbsql_rows_fetched();
fbsql_select_db();
fbsql_set_characterset();
fbsql_set_lob_mode();
fbsql_set_password();
fbsql_set_transaction();
fbsql_start_db();
fbsql_stop_db();
fbsql_table_name();
fbsql_tablename();
fbsql_username();
fbsql_warnings();
filepro_fieldcount();
filepro_fieldname();
filepro_fieldtype();
filepro_fieldwidth();
filepro_retrieve();
filepro_rowcount();
filepro();
ingres_autocommit();
ingres_close();
ingres_commit();
ingres_connect();
ingres_fetch_array();
ingres_fetch_object();
ingres_fetch_row();
ingres_field_length();
ingres_field_name();
ingres_field_nullable();
ingres_field_precision();
ingres_field_scale();
ingres_field_type();
ingres_num_fields();
ingres_num_rows();
ingres_pconnect();
ingres_query();
ingres_rollback();
msql_affected_rows();
msql_close();
msql_connect();
msql_create_db();
msql_createdb();
msql_data_seek();
msql_db_query();
msql_dbname();
msql_drop_db();
msql_error();
msql_fetch_array();
msql_fetch_field();
msql_fetch_object();
msql_fetch_row();
msql_field_flags();
msql_field_len();
msql_field_name();
msql_field_seek();
msql_field_table();
msql_field_type();
msql_fieldflags();
msql_fieldlen();
msql_fieldname();
msql_fieldtable();
msql_fieldtype();
msql_free_result();
msql_list_dbs();
msql_list_fields();
msql_list_tables();
msql_num_fields();
msql_num_rows();
msql_numfields();
msql_numrows();
msql_pconnect();
msql_query();
msql_regcase();
msql_result();
msql_select_db();
msql_tablename();
msql();
mssql_bind();
mssql_close();
mssql_connect();
mssql_data_seek();
mssql_execute();
mssql_fetch_array();
mssql_fetch_assoc();
mssql_fetch_batch();
mssql_fetch_field();
mssql_fetch_object();
mssql_fetch_row();
mssql_field_length();
mssql_field_name();
mssql_field_seek();
mssql_field_type();
mssql_free_result();
mssql_free_statement();
mssql_get_last_message();
mssql_guid_string();
mssql_init();
mssql_min_error_severity();
mssql_min_message_severity();
mssql_next_result();
mssql_num_fields();
mssql_num_rows();
mssql_pconnect();
mssql_query();
mssql_result();
mssql_rows_affected();
mssql_select_db();
sqlite_array_query();
sqlite_busy_timeout();
sqlite_changes();
sqlite_close();
sqlite_column();
sqlite_create_aggregate();
sqlite_create_function();
sqlite_current();
sqlite_error_string();
sqlite_escape_string();
sqlite_exec();
sqlite_factory();
sqlite_fetch_all();
sqlite_fetch_array();
sqlite_fetch_column_types();
sqlite_fetch_object();
sqlite_fetch_single();
sqlite_fetch_string();
sqlite_field_name();
sqlite_has_more();
sqlite_has_prev();
sqlite_key();
sqlite_last_error();
sqlite_last_insert_rowid();
sqlite_libencoding();
sqlite_libversion();
sqlite_next();
sqlite_num_fields();
sqlite_num_rows();
sqlite_open();
sqlite_popen();
sqlite_prev();
sqlite_query();
sqlite_rewind();
sqlite_seek();
sqlite_single_query();
sqlite_udf_decode_binary();
sqlite_udf_encode_binary();
sqlite_unbuffered_query();
sqlite_valid();
mysql_affected_rows();
mysql_client_encoding();
mysql_close();
mysql_connect();
mysql_create_db();
mysql_data_seek();
mysql_db_name();
mysql_drop_db();
mysql_errno();
mysql_error();
mysql_fetch_array();
mysql_fetch_assoc();
mysql_fetch_field();
mysql_fetch_lengths();
mysql_fetch_object();
mysql_fetch_row();
mysql_field_flags();
mysql_field_len();
mysql_field_name();
mysql_field_seek();
mysql_field_table();
mysql_field_type();
mysql_free_result();
mysql_get_client_info();
mysql_get_host_info();
mysql_get_proto_info();
mysql_get_server_info();
mysql_info();
mysql_insert_id();
mysql_list_fields();
mysql_list_processes();
mysql_list_tables();
mysql_num_fields();
mysql_num_rows();
mysql_pconnect();
mysql_ping();
mysql_query();
mysql_real_escape_string();
mysql_result();
mysql_select_db();
mysql_set_charset();
mysql_stat();
mysql_tablename();
mysql_thread_id();
mysql_unbuffered_query();
mysql();
mysql_fieldname();
mysql_fieldtable();
mysql_fieldlen();
mysql_fieldtype();
mysql_fieldflags();
mysql_selectdb();
mysql_createdb();
mysql_dropdb();
mysql_freeresult();
mysql_numfields();
mysql_numrows();
mysql_listdbs();
mysql_listtables();
mysql_listfields();
mysql_dbname();
mysql_table_name();

// PHP 7.4 ibase extension aliases.
fbird_add_user();
fbird_affected_rows();
fbird_backup();
fbird_blob_add();
fbird_blob_cancel();
fbird_blob_close();
fbird_blob_create();
fbird_blob_echo();
fbird_blob_get();
fbird_blob_import();
fbird_blob_info();
fbird_blob_open();
fbird_close();
fbird_commit_ret();
fbird_commit();
fbird_connect();
fbird_db_info();
fbird_delete_user();
fbird_drop_db();
fbird_errcode();
fbird_errmsg();
fbird_execute();
fbird_fetch_assoc();
fbird_fetch_object();
fbird_fetch_row();
fbird_field_info();
fbird_free_event_handler();
fbird_free_query();
fbird_free_result();
fbird_gen_id();
fbird_maintain_db();
fbird_modify_user();
fbird_name_result();
fbird_num_fields();
fbird_num_params();
fbird_param_info();
fbird_pconnect();
fbird_prepare();
fbird_query();
fbird_restore();
fbird_rollback_ret();
fbird_rollback();
fbird_server_info();
fbird_service_attach();
fbird_service_detach();
fbird_set_event_handler();
fbird_trans();
fbird_wait_event();

ovrimos_close();
ovrimos_commit();
ovrimos_connect();
ovrimos_cursor();
ovrimos_exec();
ovrimos_execute();
ovrimos_fetch_into();
ovrimos_fetch_row();
ovrimos_field_len();
ovrimos_field_name();
ovrimos_field_num();
ovrimos_field_type();
ovrimos_free_result();
ovrimos_longreadlen();
ovrimos_num_fields();
ovrimos_num_rows();
ovrimos_prepare();
ovrimos_result_all();
ovrimos_result();
ovrimos_rollback();
ovrimos_close_all();

ora_bind();
ora_close();
ora_columnname();
ora_columnsize();
ora_columntype();
ora_commit();
ora_commitoff();
ora_commiton();
ora_do();
ora_error();
ora_errorcode();
ora_exec();
ora_fetch_into();
ora_fetch();
ora_getcolumn();
ora_logoff();
ora_logon();
ora_numcols();
ora_numrows();
ora_open();
ora_parse();
ora_plogon();
ora_rollback();
sybase_affected_rows();
sybase_close();
sybase_connect();
sybase_data_seek();
sybase_deadlock_retry_count();
sybase_fetch_array();
sybase_fetch_assoc();
sybase_fetch_field();
sybase_fetch_object();
sybase_fetch_row();
sybase_field_seek();
sybase_free_result();
sybase_get_last_message();
sybase_min_client_severity();
sybase_min_error_severity();
sybase_min_message_severity();
sybase_min_server_severity();
sybase_num_fields();
sybase_num_rows();
sybase_pconnect();
sybase_query();
sybase_result();
sybase_select_db();
sybase_set_message_handler();
sybase_unbuffered_query();
ifx_affected_rows();
ifx_blobinfile_mode();
ifx_byteasvarchar();
ifx_close();
ifx_connect();
ifx_copy_blob();
ifx_create_blob();
ifx_create_char();
ifx_do();
ifx_error();
ifx_errormsg();
ifx_fetch_row();
ifx_fieldproperties();
ifx_fieldtypes();
ifx_free_blob();
ifx_free_char();
ifx_free_result();
ifx_get_blob();
ifx_get_char();
ifx_getsqlca();
ifx_htmltbl_result();
ifx_nullformat();
ifx_num_fields();
ifx_num_rows();
ifx_pconnect();
ifx_prepare();
ifx_query();
ifx_textasvarchar();
ifx_update_blob();
ifx_update_char();
ifxus_close_slob();
ifxus_create_slob();
ifxus_free_slob();
ifxus_open_slob();
ifxus_read_slob();
ifxus_seek_slob();
ifxus_tell_slob();
ifxus_write_slob();
mysqli_disable_reads_from_master();
mysqli_disable_rpl_parse();
mysqli_embedded_connect();
mysqli_embedded_server_end();
mysqli_embedded_server_start();
mysqli_enable_reads_from_master();
mysqli_enable_rpl_parse();
mysqli_master_query();
mysqli_resource();
mysqli_rpl_parse_enabled();
mysqli_rpl_probe();
mysqli_server_end();
mysqli_server_init();
mysqli_slave_query();
xmlrpc_decode_request();
xmlrpc_decode();
xmlrpc_encode_request();
xmlrpc_encode();
xmlrpc_get_type();
xmlrpc_is_fault();
xmlrpc_parse_method_descriptions();
xmlrpc_server_add_introspection_data();
xmlrpc_server_call_method();
xmlrpc_server_create();
xmlrpc_server_destroy();
xmlrpc_server_register_introspection_callback();
xmlrpc_server_register_method();
xmlrpc_set_type();
enchant_broker_get_dict_path();
enchant_broker_set_dict_path();
enchant_broker_free();
enchant_broker_free_dict();
enchant_dict_add_to_personal();
enchant_dict_is_in_session();
oci_internal_debug();
zip_close();
zip_entry_close();
zip_entry_compressedsize();
zip_entry_compressionmethod();
zip_entry_filesize();
zip_entry_name();
zip_entry_open();
zip_entry_read();
zip_open();
zip_read();
openssl_x509_free();
openssl_pkey_free();
libxml_disable_entity_loader();
pg_clientencoding();
pg_cmdtuples();
pg_errormessage();
pg_fieldname();
pg_fieldnum();
pg_fieldisnull();
pg_fieldprtlen();
pg_fieldsize();
pg_fieldtype();
pg_freeresult();
pg_getlastoid();
pg_loclose();
pg_locreate();
pg_loexport();
pg_loimport();
pg_loopen();
pg_loread();
pg_loreadall();
pg_lounlink();
pg_lowrite();
pg_numfields();
pg_numrows();
pg_result();
pg_setclientencoding();
imap_header();
shmop_close();
openssl_free_key();
date_sunrise();
date_sunset();
strptime();
strftime();
gmstrftime();
mhash_count();
mhash_get_block_size();
mhash_get_hash_name();
mhash_keygen_s2k();
mhash();
odbc_result_all();

// Prevent false positives on PHP 8.0+ nullsafe method calls.
$obj?->php_check_syntax(); // OK.

utf8_encode();
utf8_decode();

assert_options();

intlcal_set();
intlgregcal_create_instance();

imap_8bit();
imap_alerts();
imap_append();
imap_base64();
imap_binary();
imap_body();
imap_bodystruct();
imap_check();
imap_clearflag_full();
imap_close();
imap_create();
imap_createmailbox();
imap_delete();
imap_deletemailbox();
imap_errors();
imap_expunge();
imap_fetch_overview();
imap_fetchbody();
imap_fetchheader();
imap_fetchmime();
imap_fetchstructure();
imap_fetchtext();
imap_gc();
imap_get_quota();
imap_get_quotaroot();
imap_getacl();
imap_getmailboxes();
imap_getsubscribed();
imap_headerinfo();
imap_headers();
imap_is_open();
imap_last_error();
imap_list();
imap_listmailbox();
imap_listscan();
imap_listsubscribed();
imap_lsub();
imap_mail();
imap_mail_compose();
imap_mail_copy();
imap_mail_move();
imap_mailboxmsginfo();
imap_mime_header_decode();
imap_msgno();
imap_mutf7_to_utf8();
imap_num_msg();
imap_num_recent();
imap_open();
imap_ping();
imap_qprint();
imap_rename();
imap_renamemailbox();
imap_reopen();
imap_rfc822_parse_adrlist();
imap_rfc822_parse_headers();
imap_rfc822_write_address();
imap_savebody();
imap_scan();
imap_scanmailbox();
imap_search();
imap_set_quota();
imap_setacl();
imap_setflag_full();
imap_sort();
imap_status();
imap_subscribe();
imap_thread();
imap_timeout();
imap_uid();
imap_undelete();
imap_unsubscribe();
imap_utf7_decode();
imap_utf7_encode();
imap_utf8();
imap_utf8_to_mutf7();

oci_bind_array_by_name();
oci_bind_by_name();
oci_cancel();
oci_client_version();
oci_close();
oci_commit();
oci_connect();
oci_define_by_name();
oci_error();
oci_execute();
oci_fetch();
oci_fetch_all();
oci_fetch_array();
oci_fetch_assoc();
oci_fetch_object();
oci_fetch_row();
oci_field_is_null();
oci_field_name();
oci_field_precision();
oci_field_scale();
oci_field_size();
oci_field_type();
oci_field_type_raw();
oci_free_descriptor();
oci_free_statement();
oci_get_implicit_resultset();
oci_lob_copy();
oci_lob_is_equal();
oci_new_collection();
oci_new_connect();
oci_new_cursor();
oci_new_descriptor();
oci_num_fields();
oci_num_rows();
oci_parse();
oci_password_change();
oci_pconnect();
oci_register_taf_callback();
oci_result();
oci_rollback();
oci_server_version();
oci_set_action();
oci_set_call_timeout();
oci_set_client_identifier();
oci_set_client_info();
oci_set_db_operation();
oci_set_edition();
oci_set_module_name();
oci_set_prefetch();
oci_set_prefetch_lob();
oci_statement_type();
oci_unregister_taf_callback();

pspell_add_to_personal();
pspell_add_to_session();
pspell_check();
pspell_clear_session();
pspell_config_create();
pspell_config_data_dir();
pspell_config_dict_dir();
pspell_config_ignore();
pspell_config_mode();
pspell_config_personal();
pspell_config_repl();
pspell_config_runtogether();
pspell_config_save_repl();
pspell_new();
pspell_new_config();
pspell_new_personal();
pspell_save_wordlist();
pspell_store_replacement();
pspell_suggest();

xml_set_object();
mysqli_ping();
mysqli_refresh();
mysqli_kill();
