<?php
// These calls should *not* trigger an error.
ExampleClass::random_bytes(); // Method, not the native PHP function.
$myobject->random_bytes(); // Method, not the native PHP function.
$myobject?->random_bytes(); // Method, not the native PHP function.
myNamespace\random_bytes(); // Namespaced function, not the native PHP function.
myNamespace\ExampleClass::random_bytes(); // Namespaced method, not the native PHP function.

/*
 * All the below functions should trigger an error.
 */
array_fill_keys();
\array_fill_keys(); // Global namespace
error_get_last();
image_type_to_extension();
memory_get_peak_usage();
sys_get_temp_dir();
timezone_abbreviations_list();
timezone_identifiers_list();
timezone_name_from_abbr();
stream_socket_shutdown();
imagegrabscreen();
imagegrabwindow();
libxml_disable_entity_loader();
mb_stripos();
mb_stristr();
mb_strrchr();
mb_strrichr();
mb_strripos();
ming_setSWFCompression();
openssl_csr_get_public_key();
openssl_csr_get_subject();
openssl_pkey_get_details();
spl_object_hash();
iterator_apply();
preg_last_error();
pg_field_table();
posix_initgroups();
gmp_nextprime();
xmlwriter_full_end_element();
xmlwriter_write_raw();
xmlwriter_start_dtd_entity();
xmlwriter_end_dtd_entity();
xmlwriter_write_dtd_entity();
filter_has_var();
filter_id();
filter_input_array();
filter_input();
filter_list();
filter_var_array();
filter_var();
json_decode();
json_encode();
zip_close();
zip_entry_close();
zip_entry_compressedsize();
zip_entry_compressionmethod();
zip_entry_filesize();
zip_entry_name();
zip_entry_open();
zip_entry_read();
zip_open();
zip_read();

array_replace();
array_replace_recursive();
class_alias();
forward_static_call();
forward_static_call_array();
gc_collect_cycles();
gc_disable();
gc_enable();
gc_enabled();
get_called_class();
gethostname();
header_remove();
lcfirst();
parse_ini_string();
quoted_printable_encode();
str_getcsv();
stream_context_set_default();
stream_supports_lock();
stream_context_get_params();
date_add();
date_create_from_format();
date_diff();
date_get_last_errors();
date_parse_from_format();
date_sub();
timezone_version_get();
gmp_testbit();
hash_copy();
imap_gc();
imap_utf8_to_mutf7();
imap_mutf7_to_utf8();
json_last_error();
mysqli_fetch_all();
mysqli_get_connection_status();
mysqli_poll();
mysqli_reap_async_query();
openssl_random_pseudo_bytes();
pcntl_signal_dispatch();
pcntl_sigprocmask();
pcntl_sigtimedwait();
pcntl_sigwaitinfo();
preg_filter();
msg_queue_exists();
shm_has_vars();
acosh();
asinh();
atanh();
expm1();
log1p();
enchant_broker_describe();
enchant_broker_dict_exists();
enchant_broker_free_dict();
enchant_broker_free();
enchant_broker_get_error();
enchant_broker_init();
enchant_broker_list_dicts();
enchant_broker_request_dict();
enchant_broker_request_pwl_dict();
enchant_broker_set_ordering();
enchant_dict_add_to_personal();
enchant_dict_add_to_session();
enchant_dict_check();
enchant_dict_describe();
enchant_dict_get_error();
enchant_dict_is_in_session();
enchant_dict_quick_check();
enchant_dict_store_replacement();
enchant_dict_suggest();
finfo_buffer();
finfo_close();
finfo_file();
finfo_open();
finfo_set_flags();
intl_error_name();
intl_get_error_code();
intl_get_error_message();
intl_is_failure();
mysqli_get_cache_stats();

hex2bin();
http_response_code();
get_declared_traits();
getimagesizefromstring();
stream_set_chunk_size();
socket_import_stream();
trait_exists();
header_register_callback();
class_uses();
session_status();
session_register_shutdown();
mysqli_error_list();
mysqli_stmt_error_list();
libxml_set_external_entity_loader();
ldap_control_paged_result();
ldap_control_paged_result_response();
transliterator_create();
transliterator_create_from_rules();
transliterator_create_inverse();
transliterator_get_error_code();
transliterator_get_error_message();
transliterator_list_ids();
transliterator_transliterate();
zlib_decode();
zlib_encode();

array_column();
boolval();
json_last_error_msg();
password_get_info();
password_hash();
password_needs_rehash();
password_verify();
hash_pbkdf2();
openssl_pbkdf2();
curl_escape();
curl_file_create();
curl_multi_setopt();
curl_multi_strerror();
curl_pause();
curl_reset();
curl_share_close();
curl_share_init();
curl_share_setopt();
curl_strerror();
curl_unescape();
imageaffinematrixconcat();
imageaffinematrixget();
imagecrop();
imagecropauto();
imageflip();
imagepalettetotruecolor();
imagescale();
mysqli_begin_transaction();
mysqli_release_savepoint();
mysqli_savepoint();
pg_escape_literal();
pg_escape_identifier();
socket_sendmsg();
socket_recvmsg();
socket_cmsg_space();
cli_get_process_title();
cli_set_process_title();
datefmt_format_object();
datefmt_get_calendar_object();
datefmt_get_timezone();
datefmt_set_timezone();

intlcal_create_instance();
intlcal_get_keyword_values_for_locale();
intlcal_get_now();
intlcal_get_available_locales();
intlcal_get();
intlcal_get_time();
intlcal_set_time();
intlcal_add();
intlcal_set_time_zone();
intlcal_after();
intlcal_before();
intlcal_set();
intlcal_roll();
intlcal_clear();
intlcal_field_difference();
intlcal_get_actual_maximum();
intlcal_get_actual_minumum();
intlcal_get_day_of_week_type();
intlcal_get_first_day_of_week();
intlcal_get_greatest_minimum();
intlcal_get_least_maximum();
intlcal_get_locale();
intlcal_get_maximum();
intlcal_get_minimal_days_in_first_week();
intlcal_get_minimum();
intlcal_get_time_zone();
intlcal_get_type();
intlcal_get_weekend_transition();
intlcal_in_daylight_time();
intlcal_is_equivalent_to();
intlcal_is_lenient();
intlcal_equals();
intlcal_get_repeated_wall_time_option();
intlcal_get_skipped_wall_time_option();
intlcal_set_repeated_wall_time_option();
intlcal_set_skipped_wall_time_option();
intlcal_from_date_time();
intlcal_to_date_time();
intlcal_get_error_code();
intlcal_get_error_message();
intlgregcal_create_instance();
intlgregcal_set_gregorian_change();
intlgregcal_get_gregorian_change();
intlgregcal_is_leap_year();
intltz_create_time_zone();
intltz_create_default();
intltz_get_id();
intltz_get_gmt();
intltz_get_unknown();
intltz_create_enumeration();
intltz_count_equivalent_ids();
intltz_create_time_zone_id_enumeration();
intltz_get_canonical_id();
intltz_get_region();
intltz_get_tz_data_version();
intltz_get_equivalent_id();
intltz_use_daylight_time();
intltz_get_offset();
intltz_get_raw_offset();
intltz_has_same_rules();
intltz_get_display_name();
intltz_get_dst_savings();
intltz_from_date_time_zone();
intltz_to_date_time_zone();
intltz_get_error_code();
intltz_get_error_message();

gmp_root();
gmp_rootrem();
hash_equals();
ldap_escape();
ldap_modify_batch();
mysqli_get_links_stats();
openssl_get_cert_locations();
openssl_x509_fingerprint();
openssl_spki_new();
openssl_spki_verify();
openssl_spki_export_challenge();
openssl_spki_export();
pg_connect_poll();
pg_consume_input();
pg_flush();
pg_socket();
session_abort();
session_reset();

random_bytes();
random_int();
error_clear_last();
gmp_random_seed();
intdiv();
preg_replace_callback_array();
gc_mem_caches();
get_resources();
posix_setrlimit();
inflate_add();
deflate_add();
inflate_init();
deflate_init();

socket_export_stream();

curl_multi_errno();
curl_share_errno();
curl_share_strerror();
is_iterable();
pcntl_async_signals();
session_create_id();
session_gc();

oci_register_taf_callback();
oci_unregister_taf_callback();

ldap_exop();
ldap_exop_passwd();
ldap_exop_whoami();
ldap_parse_exop();
socket_addrinfo_lookup();
socket_addrinfo_connect();
socket_addrinfo_bind();
socket_addrinfo_explain();
stream_isatty();
sapi_windows_vt100_support();
ftp_append();
imagebmp();
imagecreatefrombmp();
imagegetclip();
imageopenpolygon();
imageresolution();
imagesetclip();
hash_hmac_algos();
mb_chr();
mb_ord();
mb_scrub();
sodium_add();
sodium_bin2hex();
sodium_compare();
sodium_crypto_aead_aes256gcm_decrypt();
sodium_crypto_aead_aes256gcm_encrypt();
sodium_crypto_aead_aes256gcm_is_available();
sodium_crypto_aead_aes256gcm_keygen();
sodium_crypto_aead_chacha20poly1305_decrypt();
sodium_crypto_aead_chacha20poly1305_encrypt();
sodium_crypto_aead_chacha20poly1305_ietf_decrypt();
sodium_crypto_aead_chacha20poly1305_ietf_encrypt();
sodium_crypto_aead_chacha20poly1305_ietf_keygen();
sodium_crypto_aead_chacha20poly1305_keygen();
sodium_crypto_auth_keygen();
sodium_crypto_auth_verify();
sodium_crypto_auth();
sodium_crypto_box_keypair_from_secretkey_and_publickey();
sodium_crypto_box_keypair();
sodium_crypto_box_open();
sodium_crypto_box_publickey_from_secretkey();
sodium_crypto_box_publickey();
sodium_crypto_box_seal_open();
sodium_crypto_box_seal();
sodium_crypto_box_secretkey();
sodium_crypto_box_seed_keypair();
sodium_crypto_box();
sodium_crypto_generichash_final();
sodium_crypto_generichash_init();
sodium_crypto_generichash_keygen();
sodium_crypto_generichash_update();
sodium_crypto_generichash();
sodium_crypto_kdf_derive_from_key();
sodium_crypto_kdf_keygen();
sodium_crypto_kx_client_session_keys();
sodium_crypto_kx_keypair();
sodium_crypto_kx_publickey();
sodium_crypto_kx_secretkey();
sodium_crypto_kx_seed_keypair();
sodium_crypto_kx_server_session_keys();
sodium_crypto_pwhash_scryptsalsa208sha256_str_verify();
sodium_crypto_pwhash_scryptsalsa208sha256_str();
sodium_crypto_pwhash_scryptsalsa208sha256();
sodium_crypto_pwhash_str_verify();
sodium_crypto_pwhash_str();
sodium_crypto_pwhash();
sodium_crypto_scalarmult_base();
sodium_crypto_scalarmult();
sodium_crypto_secretbox_keygen();
sodium_crypto_secretbox_open();
sodium_crypto_secretbox();
sodium_crypto_shorthash_keygen();
sodium_crypto_shorthash();
sodium_crypto_sign_detached();
sodium_crypto_sign_ed25519_pk_to_curve25519();
sodium_crypto_sign_ed25519_sk_to_curve25519();
sodium_crypto_sign_keypair_from_secretkey_and_publickey();
sodium_crypto_sign_keypair();
sodium_crypto_sign_open();
sodium_crypto_sign_publickey_from_secretkey();
sodium_crypto_sign_publickey();
sodium_crypto_sign_secretkey();
sodium_crypto_sign_seed_keypair();
sodium_crypto_sign_verify_detached();
sodium_crypto_sign();
sodium_crypto_stream_keygen();
sodium_crypto_stream_xor();
sodium_crypto_stream();
sodium_hex2bin();
sodium_increment();
sodium_memcmp();
sodium_memzero();
sodium_pad();
sodium_unpad();
spl_object_id();
pg_lo_truncate();
sodium_base642bin();
sodium_bin2base64();
sodium_crypto_aead_xchacha20poly1305_ietf_decrypt();
sodium_crypto_aead_xchacha20poly1305_ietf_encrypt();
sodium_crypto_aead_xchacha20poly1305_ietf_keygen();
sodium_crypto_pwhash_str_needs_rehash();
sodium_crypto_secretstream_xchacha20poly1305_init_pull();
sodium_crypto_secretstream_xchacha20poly1305_init_push();
sodium_crypto_secretstream_xchacha20poly1305_keygen();
sodium_crypto_secretstream_xchacha20poly1305_pull();
sodium_crypto_secretstream_xchacha20poly1305_push();
sodium_crypto_secretstream_xchacha20poly1305_rekey();

iterator_count();
iterator_to_array();
spl_autoload_call();
spl_autoload_extensions();
spl_autoload_functions();
spl_autoload_register();
spl_autoload_unregister();
spl_autoload();
hash_hmac();

hrtime();
is_countable();
array_key_first();
array_key_last();
fpm_get_status();
net_get_interfaces();
gmp_binomial();
gmp_lcm();
gmp_perfect_power();
gmp_kronecker();
ldap_exop_refresh();
normalizer_get_raw_decomposition();
openssl_pkey_derive();

socket_wsaprotocol_info_export();
socket_wsaprotocol_info_import();
socket_wsaprotocol_info_release();

sapi_windows_cp_set();
sapi_windows_cp_get();
sapi_windows_cp_is_utf8();
sapi_windows_cp_conv();
hash_hkdf();
pcntl_signal_get_handler();

ldap_add_ext();
ldap_bind_ext();
ldap_delete_ext();
ldap_mod_add_ext();
ldap_mod_replace_ext();
ldap_mod_del_ext();
ldap_rename_ext();

oci_set_call_timeout();
oci_set_db_operation();

mb_str_split();
get_mangled_object_vars();
openssl_x509_verify();
pcntl_unshare();
sapi_windows_set_ctrl_handler();
sapi_windows_generate_ctrl_event();
password_algos();
imagecreatefromtga();

opcache_compile_file();
opcache_get_configuration();
opcache_get_status();
opcache_invalidate();
opcache_reset();
opcache_is_script_cached();

phpdbg_break_file();
phpdbg_break_function();
phpdbg_break_method();
phpdbg_break_next();
phpdbg_clear();
phpdbg_color();
phpdbg_end_oplog();
phpdbg_exec();
phpdbg_get_executable();
phpdbg_prompt();
phpdbg_start_oplog();

gc_status();
php_ini_loaded_file();

readline_callback_handler_install();
readline_callback_handler_remove();
readline_callback_read_char();
readline_on_new_line();
readline_redisplay();

gzdecode();
inflate_get_read_len();
inflate_get_status();

hash_algos();
hash_file();
hash_final();
hash_hmac_file();
hash_init();
hash_update_file();
hash_update_stream();
hash_update();
hash();

openssl_cipher_iv_length();
openssl_decrypt();
openssl_dh_compute_key();
openssl_digest();
openssl_encrypt();
openssl_get_cipher_methods();
openssl_get_curve_names();
openssl_get_md_methods();
openssl_pkcs12_export_to_file();
openssl_pkcs12_export();
openssl_pkcs12_read();
openssl_pkcs7_read();

date_create_immutable_from_format();
date_create_immutable();
date_create();
date_date_set();
date_default_timezone_get();
date_default_timezone_set();
date_format();
date_interval_create_from_date_string();
date_interval_format();
date_isodate_set();
date_modify();
date_offset_get();
date_parse();
date_sun_info();
date_time_set();
date_timestamp_get();
date_timestamp_set();
date_timezone_get();
date_timezone_set();
strptime();
timezone_open();
timezone_location_get();
timezone_name_get();
timezone_offset_get();
timezone_transitions_get();

fputcsv();
lchgrp();
lchown();
realpath_cache_get();
realpath_cache_size();

enchant_broker_get_dict_path();
enchant_broker_set_dict_path();

collator_asort();
collator_compare();
collator_create();
collator_get_attribute();
collator_get_error_code();
collator_get_error_message();
collator_get_locale();
collator_get_sort_key();
collator_get_strength();
collator_set_attribute();
collator_set_strength();
collator_sort_with_sort_keys();
collator_sort();
numfmt_create();
numfmt_format_currency();
numfmt_format();
numfmt_get_attribute();
numfmt_get_error_code();
numfmt_get_error_message();
numfmt_get_locale();
numfmt_get_pattern();
numfmt_get_symbol();
numfmt_get_text_attribute();
numfmt_parse_currency();
numfmt_parse();
numfmt_set_attribute();
numfmt_set_pattern();
numfmt_set_symbol();
numfmt_set_text_attribute();
locale_accept_from_http();
locale_canonicalize();
locale_compose();
locale_filter_matches();
locale_get_all_variants();
locale_get_default();
locale_get_display_language();
locale_get_display_name();
locale_get_display_region();
locale_get_display_script();
locale_get_display_variant();
locale_get_keywords();
locale_get_primary_language();
locale_get_region();
locale_get_script();
locale_lookup();
locale_parse();
locale_set_default();
normalizer_is_normalized();
normalizer_normalize();
msgfmt_create();
msgfmt_format_message();
msgfmt_format();
msgfmt_get_error_code();
msgfmt_get_error_message();
msgfmt_get_locale();
msgfmt_get_pattern();
msgfmt_parse_message();
msgfmt_parse();
msgfmt_set_pattern();
intlcal_is_set();
intlcal_is_weekend();
intlcal_set_first_day_of_week();
intlcal_set_lenient();
intlcal_set_minimal_days_in_first_week();
intltz_get_id_for_windows_id();
intltz_get_windows_id();
datefmt_create();
datefmt_get_datetype();
datefmt_get_timetype();
datefmt_get_calendar();
datefmt_set_calendar();
datefmt_get_timezone_id();
datefmt_set_timezone_id();
datefmt_set_pattern();
datefmt_get_pattern();
datefmt_get_locale();
datefmt_set_lenient();
datefmt_is_lenient();
datefmt_format();
datefmt_parse();
datefmt_localtime();
datefmt_get_error_code();
datefmt_get_error_message();
resourcebundle_count();
resourcebundle_create();
resourcebundle_get_error_code();
resourcebundle_get_error_message();
resourcebundle_get();
resourcebundle_locales();
grapheme_extract();
grapheme_stripos();
grapheme_stristr();
grapheme_strlen();
grapheme_strpos();
grapheme_strripos();
grapheme_strrpos();
grapheme_strstr();
grapheme_substr();
idn_to_ascii();
idn_to_utf8();
mb_encoding_aliases();
mb_ereg_replace_callback();
mb_strstr();
imageaffine();
imageconvolution();
imagecreatefromwebp();
imagesetinterpolation();
imagewebp();
imap_fetchmime();
imap_savebody();
gmp_export();
gmp_import();
gmp_random_bits();
gmp_random_range();
pcntl_errno();
pcntl_get_last_error();
pcntl_strerror();
posix_access();
posix_mknod();
sys_getloadavg();
time_sleep_until();
class_implements();
class_parents();
spl_classes();
stream_context_get_default();
stream_filter_remove();
stream_is_local();
stream_notification_callback();
stream_resolve_include_path();
stream_set_read_buffer();
stream_socket_enable_crypto();
stream_socket_pair();
stream_wrapper_restore();
stream_wrapper_unregister();
ob_tidyhandler();
tidy_access_count();
tidy_config_count();
tidy_error_count();
tidy_get_output();
tidy_warning_count();
curl_setopt_array();
ftp_mlsd();
inet_ntop();
inet_pton();
snmp_set_oid_output_format();
snmp2_get();
snmp2_getnext();
snmp2_real_walk();
snmp2_set();
snmp2_walk();
apache_reset_timeout();
fastcgi_finish_request();
htmlspecialchars_decode();
array_diff_key();
array_diff_ukey();
array_intersect_key();
array_intersect_ukey();
array_product();
interface_exists();
property_exists();
is_soap_fault();
use_soap_error_handler();
dom_import_simplexml ();
libxml_clear_errors();
libxml_get_errors();
libxml_get_last_error();
libxml_set_streams_context();
libxml_use_internal_errors();
simplexml_import_dom();
simplexml_load_file();
simplexml_load_string();
xmlwriter_end_attribute();
xmlwriter_end_cdata();
xmlwriter_end_comment();
xmlwriter_end_document();
xmlwriter_end_dtd_attlist();
xmlwriter_end_dtd_element();
xmlwriter_end_dtd();
xmlwriter_end_element();
xmlwriter_end_pi();
xmlwriter_flush();
xmlwriter_open_memory();
xmlwriter_open_uri();
xmlwriter_output_memory();
xmlwriter_set_indent_string();
xmlwriter_set_indent();
xmlwriter_start_attribute_ns();
xmlwriter_start_attribute();
xmlwriter_start_cdata();
xmlwriter_start_comment();
xmlwriter_start_document();
xmlwriter_start_dtd_attlist();
xmlwriter_start_dtd_element();
xmlwriter_start_dtd();
xmlwriter_start_element_ns();
xmlwriter_start_element();
xmlwriter_start_pi();
xmlwriter_text();
xmlwriter_write_attribute_ns();
xmlwriter_write_attribute();
xmlwriter_write_cdata();
xmlwriter_write_comment();
xmlwriter_write_dtd_attlist();
xmlwriter_write_dtd_element();
xmlwriter_write_dtd();
xmlwriter_write_element_ns();
xmlwriter_write_element();
xmlwriter_write_pi();
fbsql_rows_fetched();
fbsql_set_characterset();
fbsql_set_password();
sqlite_array_query();
sqlite_busy_timeout();
sqlite_changes();
sqlite_close();
sqlite_column();
sqlite_create_aggregate();
sqlite_create_function();
sqlite_current();
sqlite_error_string();
sqlite_escape_string();
sqlite_exec();
sqlite_factory();
sqlite_fetch_all();
sqlite_fetch_array();
sqlite_fetch_column_types();
sqlite_fetch_object();
sqlite_fetch_single();
sqlite_fetch_string();
sqlite_field_name();
sqlite_has_more();
sqlite_has_prev();
sqlite_key();
sqlite_last_error();
sqlite_last_insert_rowid();
sqlite_libencoding();
sqlite_libversion();
sqlite_next();
sqlite_num_fields();
sqlite_num_rows();
sqlite_open();
sqlite_popen();
sqlite_prev();
sqlite_query();
sqlite_rewind();
sqlite_seek();
sqlite_single_query();
sqlite_udf_decode_binary();
sqlite_udf_encode_binary();
sqlite_unbuffered_query();
sqlite_valid();
mysql_set_charset();
mysqli_affected_rows();
mysqli_get_client_info();
mysqli_get_client_version();
mysqli_connect_errno();
mysqli_connect_error();
mysqli_errno();
mysqli_error();
mysqli_field_count();
mysqli_get_host_info();
mysqli_get_proto_info();
mysqli_get_server_info();
mysqli_get_server_version();
mysqli_info();
mysqli_insert_id();
mysqli_sqlstate();
mysqli_warning_count();
mysqli_autocommit();
mysqli_change_user();
mysqli_character_set_name();
mysqli_close();
mysqli_commit();
mysqli_connect();
mysqli_debug();
mysqli_dump_debug_info();
mysqli_get_charset();
mysqli_get_connection_stats();
mysqli_get_client_stats();
mysqli_get_warnings();
mysqli_init();
mysqli_kill();
mysqli_more_results();
mysqli_multi_query();
mysqli_next_result();
mysqli_options();
mysqli_ping();
mysqli_prepare();
mysqli_query();
mysqli_real_connect();
mysqli_real_escape_string();
mysqli_real_query();
mysqli_refresh();
mysqli_rollback();
mysqli_select_db();
mysqli_set_charset();
mysqli_set_local_infile_default();
mysqli_set_local_infile_handler();
mysqli_ssl_set();
mysqli_stat();
mysqli_stmt_init();
mysqli_store_result();
mysqli_thread_id();
mysqli_thread_safe();
mysqli_use_result();
mysqli_stmt_affected_rows();
mysqli_stmt_errno();
mysqli_stmt_error();
mysqli_stmt_field_count();
mysqli_stmt_insert_id();
mysqli_stmt_num_rows();
mysqli_stmt_param_count();
mysqli_stmt_sqlstate();
mysqli_stmt_attr_get();
mysqli_stmt_attr_set();
mysqli_stmt_bind_param();
mysqli_stmt_bind_result();
mysqli_stmt_close();
mysqli_stmt_data_seek();
mysqli_stmt_execute();
mysqli_stmt_fetch();
mysqli_stmt_free_result();
mysqli_stmt_get_result();
mysqli_stmt_get_warnings();
mysqli_stmt_more_results();
mysqli_stmt_next_result();
mysqli_stmt_prepare();
mysqli_stmt_reset();
mysqli_stmt_result_metadata();
mysqli_stmt_send_long_data();
mysqli_stmt_store_result();
mysqli_field_tell();
mysqli_num_fields();
mysqli_fetch_lengths();
mysqli_num_rows();
mysqli_data_seek();
mysqli_fetch_array();
mysqli_fetch_assoc();
mysqli_fetch_field_direct();
mysqli_fetch_field();
mysqli_fetch_fields();
mysqli_fetch_object();
mysqli_fetch_row();
mysqli_field_seek();
mysqli_free_result();
mysqli_embedded_server_end();
mysqli_embedded_server_start();
mysqli_bind_param();
mysqli_bind_result();
mysqli_client_encoding();
mysqli_disable_rpl_parse();
mysqli_enable_reads_from_master();
mysqli_enable_rpl_parse();
mysqli_escape_string();
mysqli_execute();
mysqli_fetch();
mysqli_get_metadata();
mysqli_master_query();
mysqli_param_count();
mysqli_report();
mysqli_rpl_parse_enabled();
mysqli_rpl_probe();
mysqli_send_long_data();
mysqli_set_opt();
mysqli_slave_query();
mysqli_disable_reads_from_master();
mysqli_embedded_connect();
mysqli_resource();
mysqli_result_fetch_all();
mysqli_server_end();
mysqli_server_init();
mysqli_result_current_field();
mysqli_result_data_seek();
mysqli_result_fetch_array();
mysqli_result_fetch_assoc();
mysqli_result_fetch_field_direct();
mysqli_result_fetch_field();
mysqli_result_fetch_fields();
mysqli_result_fetch_object();
mysqli_result_fetch_row();
mysqli_result_field_count();
mysqli_result_field_seek();
mysqli_result_free();
mysqli_result_lengths();
mysqli_result_num_rows();
oci_bind_array_by_name();
oci_set_action();
oci_set_client_info();
oci_set_client_identifier();
oci_set_edition();
oci_set_module_name();
oci_client_version();
oci_get_implicit_resultset();
pg_execute();
pg_fetch_all_columns();
pg_field_type_oid();
pg_prepare();
pg_query_params();
pg_result_error_field();
pg_send_execute();
pg_send_prepare();
pg_send_query_params();
pg_set_error_verbosity();
pg_transaction_status();

openssl_cms_encrypt();
openssl_cms_decrypt();
openssl_cms_read();
openssl_cms_sign();
openssl_cms_verify();
fdiv();
get_debug_type();
get_resource_id();
preg_last_error_msg();
str_contains();
str_ends_with();
str_starts_with();
imagegetinterpolation();
enchant_dict_add();
enchant_dict_is_added();
ldap_count_references();

array_is_list();
fsync();
fdatasync();
imagecreatefromavif();
imageavif();
mysqli_fetch_column();
pcntl_rfork();
sodium_crypto_stream_xchacha20();
sodium_crypto_stream_xchacha20_keygen();
sodium_crypto_stream_xchacha20_xor();
sodium_crypto_core_ristretto255_add();
sodium_crypto_core_ristretto255_from_hash();
sodium_crypto_core_ristretto255_is_valid_point();
sodium_crypto_core_ristretto255_random();
sodium_crypto_core_ristretto255_scalar_add();
sodium_crypto_core_ristretto255_scalar_complement();
sodium_crypto_core_ristretto255_scalar_invert();
sodium_crypto_core_ristretto255_scalar_mul();
sodium_crypto_core_ristretto255_scalar_negate();
sodium_crypto_core_ristretto255_scalar_random();
sodium_crypto_core_ristretto255_scalar_reduce();
sodium_crypto_core_ristretto255_scalar_sub();
sodium_crypto_core_ristretto255_sub();
sodium_crypto_scalarmult_ristretto255();
sodium_crypto_scalarmult_ristretto255_base();
enum_exists();

curl_upkeep();
mysqli_execute_query();
openssl_cipher_key_length();
sodium_crypto_stream_xchacha20_xor_ic();
memory_reset_peak_usage();
ini_parse_quantity();
libxml_get_external_entity_loader();
oci_set_prefetch_lob();
odbc_connection_string_is_quoted();
odbc_connection_string_should_quote();
odbc_connection_string_quote();

imap_is_open();

json_validate();
mb_str_pad();
ldap_connect_wallet();
ldap_exop_sync();
stream_context_set_options();
posix_sysconf();
posix_pathconf();
posix_fpathconf();
posix_eaccess();
pg_set_error_context_visibility();
socket_atmark();

bcceil();
bcfloor();
bcround();
grapheme_str_split();
mb_lcfirst();
mb_ucfirst();
http_get_last_response_header();
http_clear_last_response_header();
request_parse_body();
mb_ltrim();
mb_rtrim();
mb_trim();
array_all();
array_any();
array_find();
\array_find_key();
fpow();
pg_result_memory_size();
pcntl_getcpu();
pcntl_getcpuaffinity();
pcntl_getqos_class();
pcntl_setcpuaffinity();
pcntl_setns();
pcntl_setqos();
pcntl_waitid();
pg_change_password();
pg_jit();
pg_put_copy_data();
pg_put_copy_end();
pg_set_chunked_rows_size();
pg_socket_poll();
sodium_crypto_aead_aegis128l_decrypt();
sodium_crypto_aead_aegis128l_encrypt();
sodium_crypto_aead_aegis128l_keygen();
sodium_crypto_aead_aegis256_decrypt();
sodium_crypto_aead_aegis256_encrypt();
sodium_crypto_aead_aegis256_keygen();
openssl_password_hash();
openssl_password_verify();
